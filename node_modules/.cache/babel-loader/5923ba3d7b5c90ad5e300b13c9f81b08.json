{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/AuthContext.js\";\nimport React from 'react';\nimport { firebaseAuth } from '../firebase';\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      emailerror: '',\n      emailError: [],\n      passwordError: [],\n      passworderror: ''\n    };\n\n    this.signUp = async (email, password, confirmpasswordInput, e) => {\n      e.preventDefault();\n\n      if (password === confirmpasswordInput) {\n        await firebaseAuth.createUserWithEmailAndPassword(email, password).then(success => {\n          console.log(JSON.stringify(success));\n        }).catch(err => {//console.log(JSON.stringify(err))\n        });\n      }\n    };\n  }\n\n  //Signup method end\n  /////render method\n  render() {\n    return React.createElement(AuthContext.Provider, {\n      value: {\n        user: this.state.user,\n        signUp: this.signUp\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.children);\n  } //render method ends \n\n\n} //class ends here\n\n\nconst AuthConsumer = AuthContext.Consumer;\nexport { AuthProvider, AuthConsumer };","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/AuthContext.js"],"names":["React","firebaseAuth","AuthContext","createContext","AuthProvider","Component","state","user","emailerror","emailError","passwordError","passworderror","signUp","email","password","confirmpasswordInput","e","preventDefault","createUserWithEmailAndPassword","then","success","console","log","JSON","stringify","catch","err","render","props","children","AuthConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC/B;AACHC,MAAAA,IAAI,EAAC,EADF;AAEHC,MAAAA,UAAU,EAAE,EAFT;AAGHC,MAAAA,UAAU,EAAC,EAHR;AAIHC,MAAAA,aAAa,EAAC,EAJX;AAKHC,MAAAA,aAAa,EAAC;AALX,KAD+B;;AAAA,SAWtCC,MAXsC,GAW7B,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,oBAAxB,EAA8CC,CAA9C,KAAoD;AACzDA,MAAAA,CAAC,CAACC,cAAF;;AACC,UAAIH,QAAQ,KAAKC,oBAAjB,EAAuC;AACxC,cAAMd,YAAY,CAACiB,8BAAb,CACFL,KADE,EAEFC,QAFE,EAIJK,IAJI,CAIEC,OAAD,IAAa;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAZ;AAEH,SAPK,EAQLK,KARK,CAQEC,GAAD,IAAS,CACR;AAGH,SAZC,CAAN;AAcC;AACJ,KA7BqC;AAAA;;AA8B1C;AAUA;AACIC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AACI,MAAA,KAAK,EAAE;AACPpB,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADV;AAEPK,QAAAA,MAAM,EAAE,KAAKA;AAFN,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,KAAKgB,KAAL,CAAWC,QANZ,CADJ;AAUC,GApDiC,CAqD1C;;;AArD0C,C,CAwD1C;;;AAEA,MAAMC,YAAY,GAAG5B,WAAW,CAAC6B,QAAjC;AACA,SAAS3B,YAAT,EAAuB0B,YAAvB","sourcesContent":["import React from 'react'\nimport { firebaseAuth } from '../firebase'\n\nconst AuthContext = React.createContext()\n\nclass AuthProvider extends React.Component{\n    state ={\n        user:{},\n        emailerror: '',\n        emailError:[],\n        passwordError:[],\n        passworderror:'',\n}\n\n//Signup method start \n\n    signUp = async (email, password, confirmpasswordInput, e) => {\n        e.preventDefault()\n         if (password === confirmpasswordInput) {\n        await firebaseAuth.createUserWithEmailAndPassword(\n            email,\n            password\n\n        ).then((success) => {\n            console.log(JSON.stringify(success))\n\n        })\n        .catch((err) => {\n                //console.log(JSON.stringify(err))\n\n\n            })\n\n        }\n    }\n//Signup method end\n\n\n\n\n\n\n\n\n\n/////render method\n    render() {\n        return(\n            <AuthContext.Provider\n                value={{\n                user: this.state.user,\n                signUp: this.signUp,\n\n            }}>\n            {this.props.children}\n            </AuthContext.Provider>\n            )\n        }\n//render method ends \n\n}\n//class ends here\n\nconst AuthConsumer = AuthContext.Consumer\nexport { AuthProvider, AuthConsumer }"]},"metadata":{},"sourceType":"module"}