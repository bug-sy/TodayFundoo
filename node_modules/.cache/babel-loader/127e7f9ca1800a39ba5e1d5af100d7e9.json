{"ast":null,"code":"import _slicedToArray from \"/Users/rakesh/Desktop/newsignup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/Profile.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(6)\n    }\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500]\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    fontSize: 34,\n    padding: theme.spacing(14)\n  },\n  typography: {\n    padding: theme.spacing(0)\n  },\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  buttonPosition: {\n    marginLeft: 22\n  },\n  SignoutButtonPosition: {\n    marginLeft: 105\n  }\n}));\nexport default function SimplePopover() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const bull = React.createElement(\"span\", {\n    className: classes.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u2022\");\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    alt: \"Remy Sharp\",\n    src: \"/broken-image.jpg\",\n    className: classes.orange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"B\"), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" \", React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.purple,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"OP\"))), React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Button, {\n    href: \"#text-buttons\",\n    className: classes.buttonPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Manage Your Google Account\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.SignoutButtonPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"SignOut\")))))));\n}","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/Profile.js"],"names":["React","makeStyles","Popover","Typography","Button","Divider","Avatar","deepOrange","deepPurple","Card","CardActions","CardContent","useStyles","theme","root","margin","spacing","orange","color","palette","getContrastText","backgroundColor","purple","fontSize","padding","typography","card","minWidth","bullet","display","transform","title","pos","marginBottom","buttonPosition","marginLeft","SignoutButtonPosition","SimplePopover","classes","useState","anchorEl","setAnchorEl","bull","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(6),\n    },\n  },\n\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    fontSize: 34,\n    padding: theme.spacing(14),\n    \n  },\n  typography: {\n    padding: theme.spacing(0),\n  },\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n    \n  },\n  buttonPosition:{\n    marginLeft:22,\n  },\n\n  SignoutButtonPosition:{\n    marginLeft:105,\n  }\n}));\n\nexport default function SimplePopover() {\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const bull = <span className={classes.bullet}>•</span>;\n  \n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n          <Avatar aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick} alt=\"Remy Sharp\" src=\"/broken-image.jpg\" className={classes.orange}>\n              B\n      </Avatar>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}> <Card className={classes.card}>\n      <CardContent>\n      \n        <Divider />\n        <Typography variant=\"h5\" component=\"h2\">\n        <div className={classes.root}>\n      \n      <Avatar className={classes.purple}>OP</Avatar>\n    </div>\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        <Button href=\"#text-buttons\" className={classes.buttonPosition}>Manage Your Google Account</Button>\n        </Typography>\n        <Divider />\n        \n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" ><Button variant=\"contained\" className={classes.SignoutButtonPosition}>SignOut</Button></Button>\n      </CardActions>\n    </Card></Typography>\n      </Popover>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}