{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/UserSigninmain.js\";\nimport React from 'react';\nimport { firebaseAuth } from '../firebase';\nimport { newPostRef } from '../firebase';\nimport UserSigin from './User_signin';\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      emailerror: '',\n      emailError: [],\n      passwordError: [],\n      passworderror: ''\n    };\n\n    this.signUp = async (first_name, last_name, email, password, e) => {\n      console.log(email);\n      e.preventDefault();\n      await firebaseAuth.createUserWithEmailAndPassword(email, password).then(success => {\n        newPostRef.ref('/users /' + success.user.uid + '/userData/').push({\n          first_name: first_name,\n          last_name: last_name\n        });\n      }).catch(err => {\n        if (!email || !password) {\n          if (!email && !password) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true],\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          } else if (!email) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true]\n            });\n          } else if (!password) {\n            this.setState({\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          }\n        } else {\n          console.log(JSON.stringify(err));\n        }\n      });\n    };\n\n    this.logIn = async (email, password, e) => {\n      e.preventDefault();\n      await firebaseAuth.signInWithEmailAndPassword(email, password).then(success => {\n        console.log(\"uid\" + success.user.uid);\n        localStorage.setItem('uid', success.user.uid); // const uid = localStorage.getItem('uid')\n        // console.log('app : ' + uid);       \n      }).catch(err => {\n        if (!email || !password) {\n          if (!email && !password) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true],\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          } else if (!email) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true]\n            });\n          } else if (!password) {\n            this.setState({\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          }\n        } else {\n          this.setState({\n            passworderror: \"wrong password,press reset password\",\n            passwordError: [true]\n          });\n        }\n\n        console.log(JSON.stringify(err));\n      });\n    };\n  }\n\n  //starting of the input user \n  componentDidMount() {\n    firebaseAuth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user: {\n            id: user.uid,\n            email: user.email\n          }\n        });\n      } else {\n        this.setState({\n          user: {}\n        });\n      }\n    });\n  } //ending of the input user\n  //---------------\n  //Signup method start \n\n\n  //Signin method end \n  //-----------------\n  /////render method\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(UserSigin, {\n      logIn: this.logIn,\n      error: this.state.emailerror,\n      emailError: this.state.emailError[0],\n      password: this.state.passworderror,\n      passwordError: this.state.passwordError[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/UserSigninmain.js"],"names":["React","firebaseAuth","newPostRef","UserSigin","AuthContext","createContext","AuthProvider","Component","state","user","emailerror","emailError","passwordError","passworderror","signUp","first_name","last_name","email","password","e","console","log","preventDefault","createUserWithEmailAndPassword","then","success","ref","uid","push","catch","err","setState","JSON","stringify","logIn","signInWithEmailAndPassword","localStorage","setItem","componentDidMount","onAuthStateChanged","id","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firebaseAuth } from '../firebase'\nimport { newPostRef } from '../firebase'\nimport UserSigin from './User_signin'\n\nconst AuthContext = React.createContext()\n\nclass AuthProvider extends React.Component{\n    state =\n    {\n        user:{},\n        emailerror: '',\n        emailError:[],\n        passwordError:[],\n        passworderror:'',\n    }\n\n//starting of the input user \ncomponentDidMount() {\n    firebaseAuth.onAuthStateChanged((user) => {\n        if (user) {\n                this.setState({\n                    user: {\n                        id: user.uid,\n                        email: user.email\n                    }\n                })\n\n        }\n        else \n        {\n                this.setState({\n                        user: {}\n                        })\n                    }\n                })\n        }\n\n//ending of the input user\n//---------------\n//Signup method start \nsignUp = async (first_name,last_name,email, password, e) => \n{\n    console.log(email)\n    e.preventDefault()\n    await firebaseAuth.createUserWithEmailAndPassword(\n        email,\n        password\n        ).then((success) => {\n            newPostRef.ref('/users /' + success.user.uid + '/userData/').push({\n                first_name: first_name,\n                last_name: last_name,\n            })})\n                .catch((err) => \n        {\n                \n        if (!email || !password) \n        {\n                    if (!email && !password) \n                    {\n                        this.setState({\n                            emailerror: \"please enter email\",\n                            emailError: [true],\n                            passworderror: \"please enter password\",\n                            passwordError: [true]\n\n\n                        })\n                    }\n\n                    else if (!email) \n                    {\n                            this.setState({\n                                emailerror: \"please enter email\",\n                                emailError: [true],\n\n\n                            })\n                    }\n\n                    else if (!password) \n                    {\n                        this.setState({\n                            passworderror: \"please enter password\",\n                            passwordError: [true]\n                        })\n                    }                   \n        } \n\n        else\n        {\n               console.log(JSON.stringify(err))\n        }\n        })\n}\n\n//Signup method end\n//------------------------\n/////////Signin method start \nlogIn = async (email, password, e) => \n{\n    e.preventDefault()\n    await  firebaseAuth.signInWithEmailAndPassword(\n        email,\n        password,\n    ).then((success) => {\n\n    console.log(\"uid\" + success.user.uid)\n    localStorage.setItem('uid', success.user.uid)\n       // const uid = localStorage.getItem('uid')\n       // console.log('app : ' + uid);       \n    }).catch((err) =>{\n\n    if (!email || !password) \n    {\n\n                                if (!email && !password) \n                                {\n                                        this.setState({\n                                        emailerror: \"please enter email\",\n                                        emailError: [true],\n                                        passworderror: \"please enter password\",\n                                        passwordError: [true]\n                                        })\n                                    }\n                                    else if (!email) {\n                                        this.setState({\n                                        emailerror: \"please enter email\",\n                                        emailError: [true],\n                                        })\n                                    }\n                                    else if (!password) \n                                    {\n                                        this.setState({\n                                        passworderror: \"please enter password\",\n                                        passwordError: [true]\n                                        })\n                                    }\n\n                                }\n                                else \n                                {\n                                        this.setState({\n                                            passworderror: \"wrong password,press reset password\",\n                                            passwordError: [true]\n                                        })\n                                }\n                            console.log(JSON.stringify(err))\n\n    })\n    }\n\n\n\n//Signin method end \n//-----------------\n/////render method\nrender(){\n        return(\n            <div>\n                <UserSigin \n                    logIn={this.logIn}\n                    error= {this.state.emailerror}\n             emailError= {this.state.emailError[0]}\n             password= {this.state.passworderror}\n             passwordError= {this.state.passwordError[0]}\n            />\n            </div>\n             )\n        }\n \n}\nexport default AuthProvider"]},"metadata":{},"sourceType":"module"}