{"ast":null,"code":"import _objectSpread from \"/Users/rakesh/Desktop/newsignup/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/CustomizedDrawer.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { shadows } from '@material-ui/system';\nimport { withStyles } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Dashboard from './Dashboard';\nconst drawerWidth = '50px';\nconst theme = createMuiTheme({\n  spacing: 4\n});\nconst styles = {\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n      boxShadow: 0\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    top: '50px',\n    paper: {\n      top: '50px',\n      [theme.breakpoints.up('sm')]: {\n        top: '65px'\n      }\n    },\n    '& .MuiPaper-elevation16': {\n      boxShadow: 'none'\n    },\n    '& .MuiBackdrop-root': {\n      backgroundColor: 'rgba(255, 255, 255, 255)'\n    }\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    '& .MuiDrawer-paper': {\n      top: '4em'\n    }\n  },\n  drawerHeader: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar, {\n    justifyContent: 'flex-end'\n  }),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n};\nconst CustomDrawer = withStyles({\n  paper: {\n    top: '65px'\n  }\n})(Drawer);\n\nclass TemporaryDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLeft: false\n    };\n    this.drawerRef = React.createRef();\n  }\n\n  render() {\n    const classes = this.props;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: () => this.setState({\n        showLeft: !this.state.showLeft\n      }),\n      ref: this.drawerRef //className={clsx(classes.menuButton, this.state.showLeft && classes.hide)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(CustomDrawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.showLeft,\n      anchorEl: this.drawerRef.current,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(TemporaryDrawer);","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/CustomizedDrawer.js"],"names":["React","clsx","shadows","withStyles","createMuiTheme","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Dashboard","drawerWidth","theme","spacing","styles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","boxShadow","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","top","paper","breakpoints","up","backgroundColor","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","CustomDrawer","TemporaryDrawer","Component","constructor","props","state","showLeft","drawerRef","createRef","render","classes","setState","current","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { shadows } from '@material-ui/system';\nimport { withStyles } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Dashboard from './Dashboard'\n\nconst drawerWidth = '50px';\n\nconst theme = createMuiTheme({\n    spacing: 4\n});\n\nconst styles = {\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n            boxShadow:0\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        top: '50px',\n        paper: {\n            top: '50px',\n            [theme.breakpoints.up('sm')]: {\n                top: '65px',\n            },\n        },\n        '& .MuiPaper-elevation16': {\n            boxShadow: 'none',\n        },\n        '& .MuiBackdrop-root': {\n            backgroundColor: 'rgba(255, 255, 255, 255)',\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        '& .MuiDrawer-paper': {\n            top: '4em',\n        }\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n};\n\nconst CustomDrawer = withStyles(\n    {\n        paper: {\n            top: '65px',\n        }\n    }\n\n)(Drawer)\n\n\n\nclass TemporaryDrawer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state =\n            {\n                showLeft: false,\n            }\n        this.drawerRef = React.createRef();\n    }\n\n\n\n\n\n    render() {\n        const classes = this.props;\n\n\n\n\n\n        return (\n            <div className={classes.root}>\n            \n                <CssBaseline />\n              \n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => this.setState({ showLeft: !this.state.showLeft })}\n                            ref={this.drawerRef}\n                        //className={clsx(classes.menuButton, this.state.showLeft && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n\n                    </Toolbar>\n              \n                <CustomDrawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={this.state.showLeft}\n                    anchorEl={this.drawerRef.current}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n\n\n                    <Divider />\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </CustomDrawer>\n\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(TemporaryDrawer);\n"]},"metadata":{},"sourceType":"module"}