{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/Pages/Parsing.js\";\nimport React from 'react';\nimport Dashboard from '/Users/rakesh/Desktop/newsignup/src/components/clickAwayforNotes.js';\nimport Board from '../Board';\nimport { newPostRef } from '/Users/rakesh/Desktop/newsignup/src/firebase.js';\nimport List from '/Users/rakesh/Desktop/newsignup/src/components/List.js';\nimport data from '/Users/rakesh/Desktop/newsignup/src/sampleData.js';\nimport { createUserNote, getNotes, updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js';\n\nclass NoteInputandOutput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boards: [],\n      notes: null,\n      archiveStatus: false,\n      pinStatus: false,\n      trashStatus: false\n    };\n\n    this.createNewBoard = async board => {\n      try {\n        const uid = localStorage.getItem('uid');\n        console.log('app : ' + uid);\n        newPostRef.ref('/users /' + uid + '/notes/').push({\n          board\n        });\n        this.setState({\n          boards: [...this.state.boards, board]\n        });\n      } catch (error) {\n        console.error('Error creating new board: ', error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ boards: data.boards })\n    const uid = localStorage.getItem('uid');\n    var starCountRef = newPostRef.ref('/users /' + uid + '/notes/');\n    starCountRef.on('value', function (snapshot) {\n      console.log(snapshot.val());\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Dashboard, {\n      boards: this.state.boards,\n      createNewBoard: this.createNewBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), Object.keys(this.state.boards).map(key => React.createElement(List, {\n      key: this.state.boards[key].id,\n      list: this.state.boards[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NoteInputandOutput;","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/Pages/Parsing.js"],"names":["React","Dashboard","Board","newPostRef","List","data","createUserNote","getNotes","updateNote","NoteInputandOutput","Component","state","boards","notes","archiveStatus","pinStatus","trashStatus","createNewBoard","board","uid","localStorage","getItem","console","log","ref","push","setState","error","componentDidMount","starCountRef","on","snapshot","val","render","Object","keys","map","key","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qEAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,iDAA3B;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAqD,iDAArD;;AACA,MAAMC,kBAAN,SAAiCT,KAAK,CAACU,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAE7CC,KAF6C,GAErC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,aAAa,EAAE,KAHX;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,WAAW,EAAE;AALT,KAFqC;;AAAA,SAuB7CC,cAvB6C,GAuB5B,MAAOC,KAAP,IAAiB;AAC9B,UAAI;AAEA,cAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,GAAvB;AACAhB,QAAAA,UAAU,CAACqB,GAAX,CAAe,aAAaL,GAAb,GAAmB,SAAlC,EAA6CM,IAA7C,CAAkD;AAC9CP,UAAAA;AAD8C,SAAlD;AAIA,aAAKQ,QAAL,CAAc;AAAEd,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,EAAuBM,KAAvB;AAAV,SAAd;AACH,OATD,CAUA,OAAOS,KAAP,EAAc;AACVL,QAAAA,OAAO,CAACK,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACH;AACJ,KArC4C;AAAA;;AAU7CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMT,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,QAAIQ,YAAY,GAAG1B,UAAU,CAACqB,GAAX,CAAe,aAAaL,GAAb,GAAmB,SAAlC,CAAnB;AACAU,IAAAA,YAAY,CAACC,EAAb,CAAgB,OAAhB,EAAyB,UAAUC,QAAV,EAAoB;AAC3CT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,GAAT,EAAZ;AAED,KAHD;AAOH;;AAoBLC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAEI,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWC,MAFvB;AAGI,MAAA,cAAc,EAAE,KAAKK,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOKiB,MAAM,CAACC,IAAP,CAAY,KAAKxB,KAAL,CAAWC,MAAvB,EAA+BwB,GAA/B,CAAmCC,GAAG,IACnC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWC,MAAX,CAAkByB,GAAlB,EAAuBC,EAAlC;AACI,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC,MAAX,CAAkByB,GAAlB,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAPL,CADJ;AAiBH;;AA3DgD;;AAiEjD,eAAe5B,kBAAf","sourcesContent":["import React from 'react';\nimport Dashboard from '/Users/rakesh/Desktop/newsignup/src/components/clickAwayforNotes.js'\nimport Board from '../Board'\nimport { newPostRef } from '/Users/rakesh/Desktop/newsignup/src/firebase.js'\nimport List from '/Users/rakesh/Desktop/newsignup/src/components/List.js'\nimport data from '/Users/rakesh/Desktop/newsignup/src/sampleData.js'\nimport { createUserNote, getNotes, updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js'\nclass NoteInputandOutput extends React.Component {\n\n    state = {\n        boards: [],\n        notes: null,\n        archiveStatus: false,\n        pinStatus: false,\n        trashStatus: false,\n    }\n    \n    componentDidMount() {\n        //this.setState({ boards: data.boards })\n        const uid = localStorage.getItem('uid')\n        var starCountRef = newPostRef.ref('/users /' + uid + '/notes/')\n        starCountRef.on('value', function (snapshot) {\n          console.log(snapshot.val())\n           \n        });\n       \n        \n\n    }\n\n    createNewBoard = async (board) => {\n        try {\n\n            const uid = localStorage.getItem('uid')\n            console.log('app : ' + uid);\n            newPostRef.ref('/users /' + uid + '/notes/').push({\n                board\n            })\n         \n            this.setState({ boards: [...this.state.boards, board] })\n        }\n        catch (error) {\n            console.error('Error creating new board: ', error)\n        }\n    }\n\n\n\nrender(){\n    return(\n        <div>\n            <Dashboard\n             \n                boards={this.state.boards}\n                createNewBoard={this.createNewBoard}\n            />\n           \n            {Object.keys(this.state.boards).map(key => (\n                <List key={this.state.boards[key].id}\n                    list={this.state.boards[key]}\n                />\n            ))}\n           \n\n        </div>\n    )\n}\n\n\n\n}\n\nexport default NoteInputandOutput\n\n\n"]},"metadata":{},"sourceType":"module"}