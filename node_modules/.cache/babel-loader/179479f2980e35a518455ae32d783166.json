{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/CustomizedDrawer.js\";\nimport React from 'react';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst drawerWidth = '250px';\nconst theme = createMuiTheme({\n  spacing: 4\n});\nconst styles = {\n  root: {\n    display: 'flex'\n  }\n};\nconst CustomDrawer = withStyles({\n  paper: {\n    top: '65px',\n    boxShadow: 70,\n    width: drawerWidth\n  }\n})(Drawer);\n\nclass TemporaryDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLeft: false,\n      coloranchorEl: 'Notes'\n    };\n    this.drawerRef = React.createRef();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: () => this.setState({\n        showLeft: !this.state.showLeft\n      }),\n      ref: this.drawerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(CustomDrawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.showLeft,\n      anchorEl: this.drawerRef.current,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, ['Notes', 'Reminders'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      onClick: () => {\n        this.setState({\n          coloranchorEl: text\n        });\n\n        if (text == 'Notes') {\n          this.props.DashboardProps.history.push('/Dashboard/Parsing');\n        }\n      },\n      style: {\n        backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '',\n        borderRadius: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(NotesIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : React.createElement(AddAlertIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, ['Edit labels'].map(text => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      onClick: () => this.setState({\n        coloranchorEl: text\n      }),\n      style: {\n        backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '',\n        borderRadius: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, ['Archive', 'Trash'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      onClick: () => {\n        this.setState({\n          coloranchorEl: text\n        });\n\n        if (text == 'Archive') {\n          this.props.DashboardProps.history.push('/Dashboard/Archive');\n        } else {\n          this.props.DashboardProps.history.push('/Dashboard/Trash');\n        }\n      },\n      style: {\n        backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '',\n        borderRadius: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(ArchiveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(TemporaryDrawer);","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/CustomizedDrawer.js"],"names":["React","NotesIcon","AddAlertIcon","ArchiveIcon","EditIcon","DeleteIcon","withStyles","createMuiTheme","Drawer","CssBaseline","Toolbar","List","Divider","IconButton","MenuIcon","ListItem","ListItemIcon","ListItemText","drawerWidth","theme","spacing","styles","root","display","CustomDrawer","paper","top","boxShadow","width","TemporaryDrawer","Component","constructor","props","state","showLeft","coloranchorEl","drawerRef","createRef","render","classes","setState","drawer","current","drawerPaper","map","text","index","DashboardProps","history","push","backgroundColor","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,MAAMC,WAAW,GAAG,OAApB;AAEA,MAAMC,KAAK,GAAGZ,cAAc,CAAC;AACzBa,EAAAA,OAAO,EAAE;AADgB,CAAD,CAA5B;AAIA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAG;AACHC,IAAAA,OAAO,EAAG;AADP;AADI,CAAf;AAWA,MAAMC,YAAY,GAAGlB,UAAU,CAC3B;AACImB,EAAAA,KAAK,EAAG;AACJC,IAAAA,GAAG,EAAG,MADF;AAEJC,IAAAA,SAAS,EAAG,EAFR;AAGJC,IAAAA,KAAK,EAAGV;AAHJ;AADZ,CAD2B,CAAV,CAQnBV,MARmB,CAArB;;AAUA,MAAMqB,eAAN,SAA8B7B,KAAK,CAAC8B,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GACI;AACIC,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,aAAa,EAAC;AAFlB,KADJ;AAKA,SAAKC,SAAL,GAAiBpC,KAAK,CAACqC,SAAN,EAAjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACEC,OADF,GACa,KAAKP,KADlB,CACEO,OADF;AAGL,WACI;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACjB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,oBAAW,aAFf;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKkB,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd,CAHnB;AAII,MAAA,GAAG,EAAE,KAAKE,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CAFR,EAYI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAEG,OAAO,CAACE,MADvB;AAEI,MAAA,OAAO,EAAC,YAFZ;AAGI,MAAA,MAAM,EAAC,MAHX;AAII,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,QAJrB;AAKI,MAAA,QAAQ,EAAE,KAAKE,SAAL,CAAeM,OAL7B;AAMI,MAAA,OAAO,EAAE;AACLjB,QAAAA,KAAK,EAAEc,OAAO,CAACI;AADV,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,OAAD,EAAU,WAAV,EAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KACxB,oBAAC,QAAD;AACA,MAAA,MAAM,MADN;AACO,MAAA,GAAG,EAAED,IADZ;AAEA,MAAA,OAAO,EAAE,MAAM;AAEX,aAAKL,QAAL,CAAc;AAAEL,UAAAA,aAAa,EAACU;AAAhB,SAAd;;AACA,YAAIA,IAAI,IAAI,OAAZ,EAAqB;AACjB,eAAKb,KAAL,CAAWe,cAAX,CAA0BC,OAA1B,CAAkCC,IAAlC,CAAuC,oBAAvC;AACH;AAIA,OAXL;AAYA,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWE,aAAX,KAA6BU,IAA7B,GAAoC,SAApC,GAAgD,EAAnE;AAAuEM,QAAAA,YAAY,EAAE;AAArF,OAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBL,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAkC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CAdJ,EAeI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADH,CADL,CAXJ,EAgCI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,EAiCI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,aAAD,EAAgBD,GAAhB,CAAqBC,IAAD,IACjB,oBAAC,QAAD;AACA,MAAA,MAAM,MADN;AACO,MAAA,GAAG,EAAEA,IADZ;AAEA,MAAA,OAAO,EAAE,MAAM,KAAKL,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAEU;AAAjB,OAAd,CAFf;AAKA,MAAA,KAAK,EAAE;AAAEK,QAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWE,aAAX,KAA6BU,IAA7B,GAAoC,SAApC,GAAgD,EAAnE;AAAuEM,QAAAA,YAAY,EAAE;AAArF,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAPJ,EAQI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEN,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADH,CADL,CAjCJ,EA+CI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CJ,EAgDI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,SAAD,EAAY,OAAZ,EAAsBD,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KACvB,oBAAC,QAAD;AACA,MAAA,MAAM,MADN;AACO,MAAA,GAAG,EAAED,IADZ;AAEI,MAAA,OAAO,EAAE,MAAM;AAEX,aAAKL,QAAL,CAAc;AAAEL,UAAAA,aAAa,EAAEU;AAAjB,SAAd;;AACA,YAAIA,IAAI,IAAI,SAAZ,EAAuB;AACnB,eAAKb,KAAL,CAAWe,cAAX,CAA0BC,OAA1B,CAAkCC,IAAlC,CAAuC,oBAAvC;AACH,SAFD,MAGI;AACA,eAAKjB,KAAL,CAAWe,cAAX,CAA0BC,OAA1B,CAAkCC,IAAlC,CAAuC,kBAAvC;AACH;AAIJ,OAdL;AAcS,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWE,aAAX,KAA6BU,IAA7B,GAAoC,SAApC,GAAgD,EAAnE;AAAuEM,QAAAA,YAAY,EAAE;AAArF,OAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeL,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAoC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnD,CAhBJ,EAiBI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADH,CADL,CAhDJ,CAZJ,CADJ;AAuFH;;AArGyC;;AAyG9C,eAAevC,UAAU,CAACe,MAAD,CAAV,CAAmBQ,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst drawerWidth = '250px';\n\nconst theme = createMuiTheme({\n    spacing: 4\n});\n\nconst styles = {\n    root : {\n        display : 'flex',\n    },\n\n  \n   \n\n  \n};\n\nconst CustomDrawer = withStyles(\n    {\n        paper : {\n            top : '65px',\n            boxShadow : 70,\n            width : drawerWidth,\n        }\n    }\n)(Drawer)\n\nclass TemporaryDrawer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state =\n            {\n                showLeft: false,\n                coloranchorEl:'Notes'\n            }\n        this.drawerRef = React.createRef();\n    }\n\n    render() {\n        const {classes} = this.props;\n        \n        return (\n            <div className={classes.root}>            \n                <CssBaseline />              \n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => this.setState({ showLeft: !this.state.showLeft })}\n                            ref={this.drawerRef}                      \n                        >\n                            <MenuIcon />\n                        </IconButton>\n                    </Toolbar>              \n                <CustomDrawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={this.state.showLeft}\n                    anchorEl={this.drawerRef.current}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <Divider />\n                    <List >\n                        {['Notes', 'Reminders'].map((text, index) => (\n                            <ListItem \n                            button key={text} \n                            onClick={() => {\n                                \n                                this.setState({ coloranchorEl:text})\n                                if (text == 'Notes') {\n                                    this.props.DashboardProps.history.push('/Dashboard/Parsing')\n                                }\n                               \n                               \n                                  \n                                }}\n                            style={{ backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '', borderRadius: 16 }}\n                            >\n                                <ListItemIcon >{index % 2 === 0 ? <NotesIcon /> : <AddAlertIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['Edit labels'].map((text) => (\n                            <ListItem \n                            button key={text} \n                            onClick={() => this.setState({ coloranchorEl: text })\n                            \n                                }\n                            style={{ backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '', borderRadius: 16 }}\n                            >\n                                <ListItemIcon>{<EditIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['Archive', 'Trash',].map((text, index) => (\n                            <ListItem \n                            button key={text} \n                                onClick={() => {\n\n                                    this.setState({ coloranchorEl: text })\n                                    if (text == 'Archive') {\n                                        this.props.DashboardProps.history.push('/Dashboard/Archive')\n                                    }\n                                    else{\n                                        this.props.DashboardProps.history.push('/Dashboard/Trash')\n                                    }\n                                  \n\n\n                                }}   style={{ backgroundColor: this.state.coloranchorEl === text ? '#feefc3' : '', borderRadius: 16 }}\n                            >\n                                <ListItemIcon>{index % 2 === 0 ? <ArchiveIcon /> : <DeleteIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </CustomDrawer>\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(TemporaryDrawer);\n"]},"metadata":{},"sourceType":"module"}