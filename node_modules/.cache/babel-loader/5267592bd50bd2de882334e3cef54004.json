{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/Archive.jsx\";\nimport React, { Component } from 'react';\nimport { ReactDom } from 'react-dom';\nimport { Button } from '@material-ui/core';\nimport ArchiveNotes from '/Users/rakesh/Desktop/newsignup/src/components/Archivenotes.js';\nimport { createUserNote, getNotes, updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js';\nimport Parsing from '/Users/rakesh/Desktop/newsignup/src/components/Pages/Parsing.js';\nimport { render } from '@testing-library/react';\n\nclass Archive extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleArchiveStatusFalse = noteId => {\n      let obj = this.getNodeObj();\n      obj.archiveStatus = false;\n      updateNote(noteId, obj);\n    };\n\n    this.handleTrashStatusFalse = noteId => {\n      let obj = this.getNodeObj();\n      obj.trash = true;\n      updateNote(noteId, obj);\n    };\n\n    this.getNodeObj = () => {\n      var nodeObj = {\n        pinStatus: this.state.pinStatus,\n        rchiveStatus: this.state.archiveStatus,\n        trashStatus: this.state.trashStatus\n      };\n      return nodeObj;\n    };\n\n    this.state = {\n      notes: null,\n      archiveStatus: false,\n      pinStatus: false,\n      trashStatus: false\n    };\n  }\n\n  componentDidMount() {\n    getNotes(notes => {\n      this.setState({\n        notes: notes\n      }, () => {\n        console.log(\"state notes :\", this.state.notes);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.notes !== null && Object.getOwnPropertyNames(this.state.notes).map(key => this.state.notes[key].archiveStatus === true && this.state.notes[key].trashStatus === false && React.createElement(ArchiveNotes, {\n      notes: this.state.notes[key],\n      nkey: key,\n      handleArchiveStatusChange: this.handleArchiveStatusFalse,\n      handlePinStatusChange: this.handlePinStatus,\n      handleTrashStatusChange: this.handleTrashStatusTrue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Archive;","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/Archive.jsx"],"names":["React","Component","ReactDom","Button","ArchiveNotes","createUserNote","getNotes","updateNote","Parsing","render","Archive","constructor","props","handleArchiveStatusFalse","noteId","obj","getNodeObj","archiveStatus","handleTrashStatusFalse","trash","nodeObj","pinStatus","state","rchiveStatus","trashStatus","notes","componentDidMount","setState","console","log","Object","getOwnPropertyNames","map","key","handlePinStatus","handleTrashStatusTrue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,gEAAzB;AACA,SAASC,cAAT,EAAwBC,QAAxB,EAAiCC,UAAjC,QAAmD,iDAAnD;AACA,OAAOC,OAAP,MAAoB,iEAApB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAA+B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,wBAVkB,GAUUC,MAAD,IAAY;AACnC,UAAIC,GAAG,GAAG,KAAKC,UAAL,EAAV;AACAD,MAAAA,GAAG,CAACE,aAAJ,GAAoB,KAApB;AACAV,MAAAA,UAAU,CAACO,MAAD,EAAUC,GAAV,CAAV;AACH,KAdiB;;AAAA,SAgBlBG,sBAhBkB,GAgBQJ,MAAD,IAAY;AACjC,UAAIC,GAAG,GAAG,KAAKC,UAAL,EAAV;AACAD,MAAAA,GAAG,CAACI,KAAJ,GAAY,IAAZ;AACAZ,MAAAA,UAAU,CAACO,MAAD,EAASC,GAAT,CAAV;AACH,KApBiB;;AAAA,SAsBlBC,UAtBkB,GAsBL,MAAM;AACf,UAAII,OAAO,GAAG;AACVC,QAAAA,SAAS,EAAG,KAAKC,KAAL,CAAWD,SADb;AAEVE,QAAAA,YAAY,EAAG,KAAKD,KAAL,CAAWL,aAFhB;AAGVO,QAAAA,WAAW,EAAG,KAAKF,KAAL,CAAWE;AAHf,OAAd;AAKA,aAAOJ,OAAP;AACH,KA7BiB;;AAEd,SAAKE,KAAL,GAAY;AACRG,MAAAA,KAAK,EAAE,IADC;AAERR,MAAAA,aAAa,EAAC,KAFN;AAGRI,MAAAA,SAAS,EAAC,KAHF;AAIRG,MAAAA,WAAW,EAAC;AAJJ,KAAZ;AAMH;;AAuBDE,EAAAA,iBAAiB,GAAE;AACfpB,IAAAA,QAAQ,CAAEmB,KAAD,IAAS;AACd,WAAKE,QAAL,CAAc;AACVF,QAAAA,KAAK,EAACA;AADI,OAAd,EAEE,MAAI;AAACG,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKP,KAAL,CAAWG,KAAvC;AACN,OAHD;AAIH,KALO,CAAR;AAMH;;AAEDhB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKa,KAAL,CAAWG,KAAX,KAAqB,IAArB,IACAK,MAAM,CAACC,mBAAP,CAA2B,KAAKT,KAAL,CAAWG,KAAtC,EAA6CO,GAA7C,CAAkDC,GAAD,IACrD,KAAKX,KAAL,CAAWG,KAAX,CAAiBQ,GAAjB,EAAsBhB,aAAtB,KAAwC,IAAxC,IACA,KAAKK,KAAL,CAAWG,KAAX,CAAiBQ,GAAjB,EAAsBT,WAAtB,KAAsC,KADtC,IAEQ,oBAAC,YAAD;AACA,MAAA,KAAK,EAAI,KAAKF,KAAL,CAAWG,KAAX,CAAiBQ,GAAjB,CADT;AAEA,MAAA,IAAI,EAAIA,GAFR;AAGA,MAAA,yBAAyB,EAAI,KAAKpB,wBAHlC;AAIA,MAAA,qBAAqB,EAAE,KAAKqB,eAJ5B;AAKA,MAAA,uBAAuB,EAAK,KAAKC,qBALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAHR,CADJ;AAkBH;;AA5D0B;;AAmE/B,eAAezB,OAAf","sourcesContent":["import React , {Component} from 'react'\nimport {ReactDom} from 'react-dom'\nimport {Button} from '@material-ui/core'\nimport ArchiveNotes from '/Users/rakesh/Desktop/newsignup/src/components/Archivenotes.js'\nimport { createUserNote,getNotes,updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js'\nimport Parsing from '/Users/rakesh/Desktop/newsignup/src/components/Pages/Parsing.js'\nimport { render } from '@testing-library/react'\n\nclass Archive extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            notes :null,\n            archiveStatus:false,\n            pinStatus:false,\n            trashStatus:false,\n        }\n    }\n\n    handleArchiveStatusFalse = (noteId) => {\n        let obj = this.getNodeObj();\n        obj.archiveStatus = false;\n        updateNote(noteId , obj)\n    }\n\n    handleTrashStatusFalse = (noteId) => {\n        let obj = this.getNodeObj();\n        obj.trash = true;\n        updateNote(noteId, obj)\n    }\n\n    getNodeObj = () => {\n        var nodeObj = {\n            pinStatus : this.state.pinStatus,\n            rchiveStatus : this.state.archiveStatus,\n            trashStatus : this.state.trashStatus\n        }\n        return nodeObj;\n    }\n\n    componentDidMount(){\n        getNotes((notes)=>{\n            this.setState({\n                notes:notes\n            },()=>{console.log(\"state notes :\",this.state.notes)\n            })\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.notes !== null && \n                    Object.getOwnPropertyNames(this.state.notes).map((key) => (\n                this.state.notes[key].archiveStatus === true &&\n                this.state.notes[key].trashStatus === false &&\n                        <ArchiveNotes\n                        notes = {this.state.notes[key]}\n                        nkey = {key}\n                        handleArchiveStatusChange = {this.handleArchiveStatusFalse}\n                        handlePinStatusChange={this.handlePinStatus}\n                        handleTrashStatusChange = { this.handleTrashStatusTrue}                    \n                    />\n                    ))\n            }\n            </div>\n        )\n    }\n\n\n\n\n}\n\nexport default Archive"]},"metadata":{},"sourceType":"module"}