{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/UserSingnupmain.js\";\nimport React from 'react';\nimport { firebaseAuth } from '../firebase';\nimport { newPostRef } from '../firebase';\nimport UserSignup from './User_signup_form';\n\nclass UserSignupmain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      emailerror: '',\n      emailError: [],\n      passwordError: [],\n      passworderror: ''\n    };\n\n    this.signUp = async (first_name, last_name, email, password, e) => {\n      console.log(email);\n      e.preventDefault();\n      await firebaseAuth.createUserWithEmailAndPassword(email, password).then(success => {\n        newPostRef.ref('/users /' + success.user.uid + '/userData/').push({\n          first_name: first_name,\n          last_name: last_name\n        });\n      }).catch(err => {\n        if (!email || !password) {\n          if (!email && !password) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true],\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          } else if (!email) {\n            this.setState({\n              emailerror: \"please enter email\",\n              emailError: [true]\n            });\n          } else if (!password) {\n            this.setState({\n              passworderror: \"please enter password\",\n              passwordError: [true]\n            });\n          }\n        } else {\n          console.log(JSON.stringify(err));\n        }\n      });\n    };\n  }\n\n  //starting of the input user \n  componentDidMount() {\n    firebaseAuth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user: {\n            id: user.uid,\n            email: user.email\n          }\n        });\n      } else {\n        this.setState({\n          user: {}\n        });\n      }\n    });\n  } //ending of the input user\n  //---------------\n  //Signup method start \n\n\n  //Signin method end \n  //-----------------\n  /////render method\n  render() {\n    return (// <AuthContext.Provider\n      //     value={{\n      //     user: this.state.user,\n      //     signUp: this.signUp,\n      //     logIn: this.logIn,\n      //     error: this.state.emailerror,\n      //     emailError: this.state.emailError[0],\n      //     password: this.state.passworderror,\n      //     passwordError: this.state.passwordError[0],\n      // }}>\n      // {this.props.children}\n      // </AuthContext.Provider>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(UserSignup, {\n        signUp: this.signUp,\n        error: this.state.emailerror,\n        emailError: this.state.emailError[0],\n        password: this.state.passworderror,\n        passwordError: this.state.passwordError[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))\n    );\n  } //render method ends \n\n\n} //class ends here\n\n\nexport default UserSignupmain;","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/UserSingnupmain.js"],"names":["React","firebaseAuth","newPostRef","UserSignup","UserSignupmain","Component","state","user","emailerror","emailError","passwordError","passworderror","signUp","first_name","last_name","email","password","e","console","log","preventDefault","createUserWithEmailAndPassword","then","success","ref","uid","push","catch","err","setState","JSON","stringify","componentDidMount","onAuthStateChanged","id","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firebaseAuth } from '../firebase'\nimport { newPostRef } from '../firebase'\nimport UserSignup from './User_signup_form'\n\nclass UserSignupmain extends React.Component {\n    state =\n        {\n            user: {},\n            emailerror: '',\n            emailError: [],\n            passwordError: [],\n            passworderror: '',\n        }\n\n    //starting of the input user \n    componentDidMount() {\n        firebaseAuth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    user: {\n                        id: user.uid,\n                        email: user.email\n                    }\n                })\n\n            }\n            else {\n                this.setState({\n                    user: {}\n                })\n            }\n        })\n    }\n\n    //ending of the input user\n    //---------------\n    //Signup method start \n    signUp = async (first_name, last_name, email, password, e) => {\n        console.log(email)\n        e.preventDefault()\n        await firebaseAuth.createUserWithEmailAndPassword(\n            email,\n            password\n        ).then((success) => {\n            newPostRef.ref('/users /' + success.user.uid + '/userData/').push({\n                first_name: first_name,\n                last_name: last_name,\n            })\n        })\n            .catch((err) => {\n\n                if (!email || !password) {\n                    if (!email && !password) {\n                        this.setState({\n                            emailerror: \"please enter email\",\n                            emailError: [true],\n                            passworderror: \"please enter password\",\n                            passwordError: [true]\n\n\n                        })\n                    }\n\n                    else if (!email) {\n                        this.setState({\n                            emailerror: \"please enter email\",\n                            emailError: [true],\n\n\n                        })\n                    }\n\n                    else if (!password) {\n                        this.setState({\n                            passworderror: \"please enter password\",\n                            passwordError: [true]\n                        })\n                    }\n                }\n\n                else {\n                    console.log(JSON.stringify(err))\n                }\n            })\n    }\n\n    \n\n\n    //Signin method end \n    //-----------------\n    /////render method\n    render() {\n        return (\n            // <AuthContext.Provider\n            //     value={{\n            //     user: this.state.user,\n            //     signUp: this.signUp,\n            //     logIn: this.logIn,\n            //     error: this.state.emailerror,\n            //     emailError: this.state.emailError[0],\n            //     password: this.state.passworderror,\n            //     passwordError: this.state.passwordError[0],\n\n            // }}>\n            // {this.props.children}\n            // </AuthContext.Provider>\n            <div>\n                <UserSignup\n                    signUp= {this.signUp}\n                    error={this.state.emailerror}\n                    emailError={this.state.emailError[0]}\n                    password={this.state.passworderror}\n                    passwordError={this.state.passwordError[0]}\n                />\n            </div>\n        )\n    }\n    //render method ends \n}\n//class ends here\n\n\nexport default UserSignupmain"]},"metadata":{},"sourceType":"module"}