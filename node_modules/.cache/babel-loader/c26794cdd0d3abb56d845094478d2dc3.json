{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/Desktop/newsignup/src/components/Trash.js\";\nimport React, { Component } from 'react';\nimport TrashNotes from '/Users/rakesh/Desktop/newsignup/src/components/TrashNote.js';\nimport { getNotes, updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js';\n\nclass Archive extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTrashStatusFalse = noteId => {\n      let obj = this.getNodeObj();\n      obj.trashStatus = false;\n      updateNote(noteId, obj);\n    };\n\n    this.getNodeObj = () => {\n      var nodeObj = {\n        pinStatus: this.state.pinStatus,\n        rchiveStatus: this.state.archiveStatus,\n        trashStatus: this.state.trashStatus\n      };\n      return nodeObj;\n    };\n\n    this.state = {\n      notes: null,\n      archiveStatus: false,\n      pinStatus: false,\n      trashStatus: false\n    };\n  }\n\n  componentDidMount() {\n    getNotes(notes => {\n      this.setState({\n        notes: notes\n      }, () => {\n        console.log(\"state notes :\", this.state.notes);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.notes !== null && Object.getOwnPropertyNames(this.state.notes).map(key => this.state.notes[key].archiveStatus === false && this.state.notes[key].trashStatus === true && React.createElement(TrashNotes, {\n      notes: this.state.notes[key],\n      nkey: key,\n      handleTrashStatusChange: this.handleTrashStatusTrue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Archive;","map":{"version":3,"sources":["/Users/rakesh/Desktop/newsignup/src/components/Trash.js"],"names":["React","Component","TrashNotes","getNotes","updateNote","Archive","constructor","props","handleTrashStatusFalse","noteId","obj","getNodeObj","trashStatus","nodeObj","pinStatus","state","rchiveStatus","archiveStatus","notes","componentDidMount","setState","console","log","render","Object","getOwnPropertyNames","map","key","handleTrashStatusTrue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6DAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,iDAArC;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,sBAVmB,GAUOC,MAAD,IAAY;AACjC,UAAIC,GAAG,GAAG,KAAKC,UAAL,EAAV;AACAD,MAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;AACAR,MAAAA,UAAU,CAACK,MAAD,EAASC,GAAT,CAAV;AACH,KAdkB;;AAAA,SAgBnBC,UAhBmB,GAgBN,MAAM;AACf,UAAIE,OAAO,GAAG;AACVC,QAAAA,SAAS,EAAG,KAAKC,KAAL,CAAWD,SADb;AAEVE,QAAAA,YAAY,EAAG,KAAKD,KAAL,CAAWE,aAFhB;AAGVL,QAAAA,WAAW,EAAG,KAAKG,KAAL,CAAWH;AAHf,OAAd;AAKA,aAAOC,OAAP;AACH,KAvBkB;;AAEf,SAAKE,KAAL,GAAa;AACTG,MAAAA,KAAK,EAAG,IADC;AAETD,MAAAA,aAAa,EAAG,KAFP;AAGTH,MAAAA,SAAS,EAAG,KAHH;AAITF,MAAAA,WAAW,EAAG;AAJL,KAAb;AAMH;;AAiBDO,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,QAAQ,CAAEe,KAAD,IAAW;AAChB,WAAKE,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAGA;AADE,OAAd,EAEE,MAAM;AACJG,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKP,KAAL,CAAWG,KAAxC;AACH,OAJD;AAKH,KANO,CAAR;AAOH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKR,KAAL,CAAWG,KAAX,KAAqB,IAArB,IACAM,MAAM,CAACC,mBAAP,CAA2B,KAAKV,KAAL,CAAWG,KAAtC,EAA6CQ,GAA7C,CAAkDC,GAAD,IACjD,KAAKZ,KAAL,CAAWG,KAAX,CAAiBS,GAAjB,EAAsBV,aAAtB,KAAwC,KAAxC,IACA,KAAKF,KAAL,CAAWG,KAAX,CAAiBS,GAAjB,EAAsBf,WAAtB,KAAsC,IADtC,IAEI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAI,KAAKG,KAAL,CAAWG,KAAX,CAAiBS,GAAjB,CADb;AAEI,MAAA,IAAI,EAAIA,GAFZ;AAGI,MAAA,uBAAuB,EAAI,KAAKC,qBAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAHR,CADJ;AAgBH;;AArD2B;;AAwDhC,eAAevB,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport TrashNotes from '/Users/rakesh/Desktop/newsignup/src/components/TrashNote.js'\nimport { getNotes, updateNote } from '/Users/rakesh/Desktop/newsignup/src/firebase.js'\n\nclass Archive extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes : null,\n            archiveStatus : false,\n            pinStatus : false,\n            trashStatus : false,\n        }\n    }\n\n    handleTrashStatusFalse = (noteId) => {\n        let obj = this.getNodeObj();\n        obj.trashStatus = false;\n        updateNote(noteId, obj)\n    }\n\n    getNodeObj = () => {\n        var nodeObj = {\n            pinStatus : this.state.pinStatus,\n            rchiveStatus : this.state.archiveStatus,\n            trashStatus : this.state.trashStatus\n        }\n        return nodeObj;\n    }\n\n    componentDidMount() {\n        getNotes((notes) => {\n            this.setState({\n                notes : notes\n            },() => {\n                console.log(\"state notes :\", this.state.notes)\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.notes !== null &&\n                    Object.getOwnPropertyNames(this.state.notes).map((key) => (\n                    this.state.notes[key].archiveStatus === false &&\n                    this.state.notes[key].trashStatus === true &&\n                        <TrashNotes\n                            notes = {this.state.notes[key]}\n                            nkey = {key}\n                            handleTrashStatusChange = {this.handleTrashStatusTrue}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default Archive"]},"metadata":{},"sourceType":"module"}